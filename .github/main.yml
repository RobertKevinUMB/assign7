name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_ACCOUNT_ID: '866934333672'
  AWS_REGION: 'us-east-1'
  ECR_REPO: 'kevinassign6'

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: docker build -t cicd-java-kevin .

    - name: Tag and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker tag cicd-java-kevin:latest $ECR_REGISTRY/${{ env.ECR_REPO }}:$IMAGE_TAG
        docker push $ECR_REGISTRY/${{ env.ECR_REPO }}:$IMAGE_TAG

    - name: Deploy Docker image
      run: |
        docker pull ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:latest
        docker run -d --name kevin-container -p 3000:8080 ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:latest

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
      if: always()

    - name: Clean up workspace
      if: always()
      run: |
        docker system prune -af
        rm -rf *
